README for Nathaniel's image manipulation project

summary:
This is my recent hobby project. It is based on a graphics midterm project I didn't get to spend enough time on.
I intend to add more functions to the transform.h group but for now I only have a few. 

Contents:
weird.cpp is the present "living" test file for the transform library which I am building.
tga is the image load/save and interface classes
matrix is for matrix addition and multiplication 
transform is the image manipulation functions
	I have not implemented any linear algebra manipulations yet.
each of these sets of code has an executable which I used to test for proper functioning.

I've been playing with dither() for a few days. Its basically Floydd-Steinberg's algorithm for distributing noise based on surrounding pixels' error from the threshold. It is parameterized to accept a brightness threshold on which to decide whether a pixel be black or white ( pixel values being between 0 and 255). It also has a parameter to increase or decrease the noise. This number should be between 800 and 1600. 1600 is standard noise. anything below 800 tends to "checkerboard" the result with too much noise. above 1600 will decrease the noise.


Make description:
The make file will automatically compile, link and run the program as is. It will compile and link the test executables but will only run the transform test called "weird". he test is presently set to adjust contrast and then dither the image. 

It is one of many midly interesting things I have done so far. A sample of jpeg converted image files is included. 
The present ./weird takes 3 argvs. argv parameters as follows:" 
  argv1 is a pixel-wise percent multiplier for brightness"
  argv2 is offset for dithering brightness threshold"  
  argv3 is noise magnitude based on distributed error, it should be a number between 800 and 1600, Smaller = more noise"

Future work:
In the long term, I need to make a more stable means of accessing the transform functions
I plan to create an image statistics library later to aid in evaluating images for transformation: Histograms, color counts, brightness averages, contrast etc
There will be more transform functions in the future.

